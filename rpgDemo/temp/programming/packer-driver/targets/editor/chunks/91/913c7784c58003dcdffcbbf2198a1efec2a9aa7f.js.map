{"version":3,"sources":["file:///D:/gameRes/NewProject_6/assets/Script/PlayerControl.ts"],"names":["_decorator","Component","Input","input","KeyCode","RigidBody2D","Vec2","Vec3","FixedUpdate","ccclass","property","PlayerControl","Number","_moveDirection","rb","isLeftPressed","isRightPressed","isUpPressed","isDownPressed","onLoad","getComponent","on","EventType","KEY_DOWN","onKeyDown","KEY_UP","onKeyUp","start","onDestroy","off","update","dt","getInstance","fixedUpdate","bind","event","keyCode","ARROW_UP","ARROW_DOWN","ARROW_LEFT","ARROW_RIGHT","x","y","fixedDt","movement","moveSpeed","linearVelocity"],"mappings":"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","sourcesContent":["import { _decorator, Component, EventKeyboard, Input, input, KeyCode, Node, RigidBody, RigidBody2D, Vec2, Vec3 } from 'cc';\r\nimport { FixedUpdate } from './FixedUpdate';\r\nconst { ccclass, property } = _decorator;\r\n\r\n\r\n@ccclass('PlayerControl')\r\nexport class PlayerControl extends Component \r\n{\r\n    private _moveDirection:Vec3 = new Vec3(0,0,0);\r\n    @property(Number)\r\n    public moveSpeed:number = 800;\r\n    private rb:RigidBody2D = null;\r\n    //分别记录方向键的按下状态\r\n    private isLeftPressed:boolean = false;\r\n    private isRightPressed:boolean = false;\r\n    private isUpPressed:boolean = false;\r\n    private isDownPressed:boolean = false;\r\n\r\n    onLoad() \r\n    {\r\n        this.rb = this.getComponent(RigidBody2D);\r\n        input.on(Input.EventType.KEY_DOWN,this.onKeyDown,this);\r\n        input.on(Input.EventType.KEY_UP,this.onKeyUp,this);\r\n    }\r\n    start() {\r\n        \r\n    }\r\n    protected onDestroy(): void {\r\n        input.off(Input.EventType.KEY_DOWN,this.onKeyDown,this);\r\n        input.off(Input.EventType.KEY_UP,this.onKeyUp,this);\r\n    }\r\n    update(dt: number) \r\n    {\r\n        //确保在回调函数中 this 仍然指向当前类的实例。\r\n        //保证每一帧都是固定的速度\r\n        FixedUpdate.getInstance().update(dt,this.fixedUpdate.bind(this))\r\n    }\r\n    onKeyDown(event: EventKeyboard)\r\n    {\r\n        switch(event.keyCode){\r\n            case KeyCode.ARROW_UP:\r\n                this.isUpPressed = true\r\n\r\n                break;\r\n            case KeyCode.ARROW_DOWN:\r\n                this.isDownPressed = true\r\n  \r\n                break;\r\n            case KeyCode.ARROW_LEFT:\r\n                this.isLeftPressed = true\r\n       \r\n                break;\r\n            case KeyCode.ARROW_RIGHT:\r\n                this.isRightPressed = true\r\n    \r\n                break;\r\n        }\r\n        this._moveDirection.x = (this.isLeftPressed?-1:0) +(this.isRightPressed?1:0);\r\n        this._moveDirection.y = (this.isUpPressed?1:0) +(this.isDownPressed?-1:0);\r\n    }\r\n    onKeyUp(event: EventKeyboard)\r\n    {\r\n        switch(event.keyCode){\r\n            case KeyCode.ARROW_UP:\r\n                this.isUpPressed = false\r\n                \r\n                break;\r\n            case KeyCode.ARROW_DOWN:\r\n                this.isDownPressed = false\r\n                \r\n                break;\r\n            case KeyCode.ARROW_LEFT:\r\n                this.isLeftPressed = false\r\n                break;\r\n            case KeyCode.ARROW_RIGHT:\r\n                this.isRightPressed = false\r\n                break;\r\n        }\r\n        this._moveDirection.x = (this.isLeftPressed?-1:0) +(this.isRightPressed?1:0);\r\n        this._moveDirection.y = (this.isUpPressed?1:0) +(this.isDownPressed?-1:0);\r\n    }\r\n    fixedUpdate(fixedDt:number)\r\n    {\r\n        let movement = new Vec2(this._moveDirection.x*this.moveSpeed*fixedDt,this._moveDirection.y*this.moveSpeed*fixedDt);\r\n        //console.log(\"当前刚体运动的向量值：\"+movement.x+\",\"+movement.y);\r\n        this.rb.linearVelocity = movement;\r\n    }\r\n}\r\n\r\n\r\n"]}